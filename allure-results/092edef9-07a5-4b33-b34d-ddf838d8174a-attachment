# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: [US03] Gestión de empleados | Editar empleados correctamente >> Validar editar un empleado exitosamente
- Location: C:\Programacion\QA\Automation\Playwright-ts\Proyecto OrangeHRM\OrangeHRM-Demo\tests\e2e\employees\edit-employee.info.spec.ts:10:9

# Error details

```
Error: locator.click: Error: strict mode violation: locator('//div[@class=\'oxd-table-cell-actions\']//button[1]') resolved to 50 elements:
    1) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' dfgsjsjdh 123445 34 444444' }).getByRole('button').first()
    2) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0295 99N75 425 5TlV  ' }).getByRole('button').first()
    3) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0312 A8DCo 4Ys 010Z  ' }).getByRole('button').first()
    4) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 01715 Amelia Brown  ' }).getByRole('button').first()
    5) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0360 aniket t t  ' }).getByRole('button').first()
    6) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 968 aniket Ashok patil  ' }).getByRole('button').first()
    7) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0374 Anthony Graves  ' }).getByRole('button').first()
    8) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0375 as as as  ' }).getByRole('button').first()
    9) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0367 Ash J Tyson  ' }).getByRole('button').first()
    10) <button type="button" data-v-f5c763eb="" data-v-c423d1fa="" class="oxd-icon-button oxd-table-cell-action-space">…</button> aka getByRole('row', { name: ' 0303 bala kumar ravi  ' }).getByRole('button').first()
    ...

Call log:
  - waiting for locator('//div[@class=\'oxd-table-cell-actions\']//button[1]')

    at EmployeePage.editEmployeeInfoIconClick (C:\Programacion\QA\Automation\Playwright-ts\Proyecto OrangeHRM\OrangeHRM-Demo\pageobjectsmodels\EmployeePage.ts:64:44)
    at C:\Programacion\QA\Automation\Playwright-ts\Proyecto OrangeHRM\OrangeHRM-Demo\tests\e2e\employees\edit-employee.info.spec.ts:37:32
    at C:\Programacion\QA\Automation\Playwright-ts\Proyecto OrangeHRM\OrangeHRM-Demo\tests\e2e\employees\edit-employee.info.spec.ts:36:20
```

# Page snapshot

```yaml
- complementary:
  - navigation "Sidepanel":
    - link "client brand banner":
      - img "client brand banner"
    - textbox "Search"
    - button ""
    - separator
    - list:
      - listitem:
        - link "Admin"
      - listitem:
        - link "PIM"
      - listitem:
        - link "Leave"
      - listitem:
        - link "Time"
      - listitem:
        - link "Recruitment"
      - listitem:
        - link "My Info"
      - listitem:
        - link "Performance"
      - listitem:
        - link "Dashboard"
      - listitem:
        - link "Directory"
      - listitem:
        - link "Maintenance"
      - listitem:
        - link "Claim":
          - img
          - text: Claim
      - listitem:
        - link "Buzz"
- banner:
  - heading "PIM" [level=6]
  - link "Upgrade":
    - button "Upgrade"
  - list:
    - listitem:
      - img "profile picture"
      - paragraph: manda user
      - text: 
  - navigation "Topbar Menu":
    - list:
      - listitem: Configuration 
      - listitem:
        - link "Employee List"
      - listitem:
        - link "Add Employee"
      - listitem:
        - link "Reports"
      - button ""
- heading "Employee Information" [level=5]
- button ""
- separator
- text: Employee Name
- textbox "Type for hints..."
- text: Employee Id
- textbox: "3425"
- text: Employment Status -- Select --  Include Current Employees Only  Supervisor Name
- textbox "Type for hints..."
- text: Job Title -- Select --  Sub Unit -- Select -- 
- separator
- button "Reset"
- button "Search"
- button " Add"
- separator
- text: No Records Found
- table:
  - rowgroup:
    - row " Id  First (& Middle) Name  Last Name  Job Title  Employment Status  Sub Unit  Supervisor  Actions":
      - columnheader "":
        - checkbox ""
        - text: 
      - columnheader "Id "
      - columnheader "First (& Middle) Name "
      - columnheader "Last Name "
      - columnheader "Job Title "
      - columnheader "Employment Status "
      - columnheader "Sub Unit "
      - columnheader "Supervisor "
      - columnheader "Actions"
  - rowgroup
- paragraph: OrangeHRM OS 5.7
- paragraph:
  - text: © 2005 - 2025
  - link "OrangeHRM, Inc"
  - text: . All rights reserved.
- text: 
- paragraph: Info
- paragraph: No Records Found
- button "×"
```

# Test source

```ts
   1 | import { type Page, type Locator, expect } from '@playwright/test';
   2 |
   3 | export class EmployeePage {
   4 |     readonly page: Page;
   5 |     readonly addEmployeeBtn: Locator;
   6 |     readonly firstNameInput: Locator;
   7 |     readonly lastNameInput: Locator;
   8 |     readonly employeeIDInput: Locator;
   9 |     readonly saveBtn: Locator;
  10 |     readonly searchBtn: Locator;
  11 |     readonly pimModuleBtn: Locator;
  12 |     readonly employeeInfoIDInput: Locator;
  13 |     readonly idColumnValues = (id: string) => this.page.locator(`div.oxd-table-cell:has-text("${id}")`).first()
  14 |     readonly lastNameValues = (lastname: string) => this.page.locator(`div.oxd-table-cell:has-text("${lastname}")`).first()
  15 |     readonly editEmployeeInfoIconBtn: Locator
  16 |     readonly successPopUp: Locator
  17 |     
  18 |     constructor(page: Page) {
  19 |         this.page = page;
  20 |         this.addEmployeeBtn = this.page.locator("//button[contains(.,'Add')]");
  21 |         this.firstNameInput = this.page.getByRole('textbox', { name: 'First Name' });
  22 |         this.lastNameInput = this.page.getByRole('textbox', { name: 'Last Name' });
  23 |         this.employeeIDInput = this.page.locator("(//input[@class='oxd-input oxd-input--active'])[2]");
  24 |         this.saveBtn = this.page.getByRole('button', { name: 'Save' });
  25 |         this.searchBtn = this.page.getByRole('button', { name: 'Search' });
  26 |         this.pimModuleBtn = this.page.getByRole('link', { name: 'PIM' });
  27 |         this.employeeInfoIDInput = this.page.getByRole('textbox').nth(2);
  28 |         this.editEmployeeInfoIconBtn = this.page.locator("//div[@class='oxd-table-cell-actions']//button[1]");
  29 |         this.successPopUp = this.page.getByRole('paragraph', {name: 'Successfully Updated'});
  30 |     }
  31 |
  32 |     async goToAddEmployeePage() {
  33 |         await this.page.goto('https://opensource-demo.orangehrmlive.com/web/index.php/pim/viewEmployeeList');
  34 |         await this.addEmployeeBtn.click();
  35 |         await this.page.waitForLoadState('domcontentloaded');
  36 |         await expect(this.page).toHaveURL(/pim\/addEmployee/);
  37 |     }
  38 |
  39 |     async fillAddEmployee(firstName: string, lastName: string, employeeID: string) {
  40 |         await this.firstNameInput.fill(firstName);
  41 |         await this.lastNameInput.fill(lastName);
  42 |         await this.employeeIDInput.fill(employeeID);
  43 |     }
  44 |
  45 |     async searchClick() {
  46 |         await this.searchBtn.click();
  47 |     }
  48 |
  49 |     async fillEmployeeInfoIDInput(id: string) {
  50 |         await this.employeeInfoIDInput.fill(id);
  51 |     }
  52 |     async saveClick() {
  53 |         await this.saveBtn.click();
  54 |     }
  55 |     async clickOnPIMModule() {
  56 |         await this.pimModuleBtn.click();
  57 |     }
  58 |
  59 |     async succeedPopUpVisible() {
  60 |         await this.successPopUp.isVisible();
  61 |     };
  62 |
  63 |     async editEmployeeInfoIconClick() {
> 64 |         await this.editEmployeeInfoIconBtn.click();
     |                                            ^ Error: locator.click: Error: strict mode violation: locator('//div[@class=\'oxd-table-cell-actions\']//button[1]') resolved to 50 elements:
  65 |     }
  66 |
  67 |     async isUniqueID(id: string): Promise<boolean> {
  68 |         await this.page.goto('https://opensource-demo.orangehrmlive.com/web/index.php/pim/viewEmployeeList');
  69 |         await this.page.waitForLoadState('domcontentloaded');
  70 |
  71 |         const employeeRow = this.page.locator(`div.oxd-table-row:has-text("${id}")`);
  72 |
  73 |         const isRowVisible = await employeeRow.isVisible();
  74 |         return !isRowVisible;
  75 |     }
  76 |
  77 |     async generateUniqueID(): Promise<string> {
  78 |         let uniqueID: string = '';
  79 |         let isUnique: boolean = false;
  80 |         while (!isUnique) {
  81 |             uniqueID = Math.floor(Math.random() * (10000 - 1 + 1) + 1).toString();
  82 |             isUnique = await this.isUniqueID(uniqueID);
  83 |         }
  84 |         return uniqueID;
  85 |     }
  86 | }
  87 |
```